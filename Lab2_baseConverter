/*
*@Mike_Sers
*@Pat_Hennessey
*Date(02/02/19)
*Lab2_baseConverter
*CIS111B
*/

import java.util.*;
import javax.swing.*;   // imports the entirety of swing into the program. If avaliable I just use .* in case I need to use somehting else within the package.

public class Lab2_baseConverter    //   title of the program. Since this is the file I do testing in for the labs I just use LavXTesting. I also have all of my CIS111A stuff on my pc still, so I add _CIS111B so I don't resave over my old code.
    
    {
   
      public static void main(String[] args) // main method.
         
         {
           
            purpose(); 
     
         }
         
      public static void purpose()
      
         {
         
            int startingNumber = 0; // initializing users input variable
            
            int convertingNumber = 0; // initializing targetBase variable
            
            do
               
               {
               
               String startingNumberInput = JOptionPane.showInputDialog(null,"What non-negative whole number, in base 10, do you want to convert?");  // dialog box that asks the user to input the base 10 number and holds the number as a string.
               
                  if(startingNumberInput.equals(""))  // comparing empty strings(no input)
                  
                        {
                        
                        purpose();  // recalls purpose() to reprompt startingNumberInput
                        
                        }
               
               startingNumber = Integer.parseInt(startingNumberInput); 
               
               if (startingNumber == 0)
             
               {
               
                  JOptionPane.showMessageDialog(null, "0 will always be 0, no matter what base it is in."); // user enters 0
                  
                  convertMore();
                                   
               }
               
               } while (startingNumber < 0);
         
            do
               
               {
               
               String convertingNumberInput = JOptionPane.showInputDialog(null,"Please enter a positive whole number between 2 and 16 to use as the new base?");  // dialog box that asks the user to input the new base to convert startingNumberInput into.
               
               convertingNumber = Integer.parseInt(convertingNumberInput); // reads in users targetBase int Integer
               
               } while (convertingNumber < 2 || convertingNumber > 16); // will repromt user with dialogBox
            
            calculator(startingNumber, convertingNumber); // passing our new int startingNumber & int convertingNumber to be called into calculator()
         
         }
         
      public static void calculator(int x, int y)
      
         {

         ArrayList<String> printArrayList = new ArrayList<>(); // ArrayList for printing the array with converted Integers back into Strings
         
         ArrayList<Integer> convertingArrayList = new ArrayList<>(); // ArrayList for storing the remainder from calculator, then 
         
         ///////////////
         /// variable declaration
         ///////////////
         
         int unchangingX = x; //inital value (startingNumber)
         
         int unchangingY = y; //inital targetBase (convertingNumber)
         
         int remainder= 0; // for convertingArrayList.add(remainder)
         
         int z = 0; // quotient of integer division
         
         ///////////////
         /// end of variable decl
         ///////////////
         
         
         ///////////////
         /// do-while
         ///////////////
         do 
            {
            
            z = (x / y); // Quotient from integer division
            
            remainder = (x % y); // Remainder from integer division
            
            convertingArrayList.add(remainder); // storing remainder into convertArray 
                        
            x = z; // reassinging z to x for next itteration of division (until condition is met)
            
            } while (x != 0);
         ///////////////
         ///end do-while
         ///////////////         
            
         //////////// 
         ///convertingArray(int) to printArray(strings)
         ///hexdeci handling by stringcomparison (.equals)
         ///set and get for array element swaping
         ////////////
         
            for (int i = 0; i < convertingArrayList.size(); i++) //reads in arrayList and compares characters greater than 10 and converts to corresponding letter
            {
               
               printArrayList.add(String.valueOf(convertingArrayList.get(i))); //in order to compare we must set each value from convertingArray (int) to printArray(string)
               
               if((printArrayList.get(i)).equals("10"))
               {
                 
                 printArrayList.set(i, "A");                      //hexDec A
                  
               }
               else if((printArrayList.get(i)).equals("11"))
               {
                 
                 printArrayList.set(i, "B");                      //hexDec B
                  
               }
               else if((printArrayList.get(i)).equals("12"))
               {
                 
                 printArrayList.set(i, "C");                      //hexDec C
                  
               }
               else if((printArrayList.get(i)).equals("13"))
               {
                 
                 printArrayList.set(i, "D");                      //hexDec D
                  
               }
               else if((printArrayList.get(i)).equals("14"))
               {
                 
                 printArrayList.set(i, "E");                      //hexDec E
                  
               }
               else if((printArrayList.get(i)).equals("15"))
               {
                 
                 printArrayList.set(i, "F");                      //hexDec F
                  
               }
               
             
            }
                        
            Collections.reverse(printArrayList);
            
            String resultString = "";
            
            for(int j = 0; j < printArrayList.size(); j++)
            {
               
               printArrayList.get(j).toString();
                  
            }
            
            JOptionPane.showMessageDialog(null, "Your original (Base10): " + unchangingX + "\nInto (Base" + unchangingY + ") is" + 
                                          "\nConverted Number: " + resultString);

         convertMore(); // if users wants to convert again
         
         System.exit(0);
         
         }
         
      public static void convertMore() // the convertMore method.
      
         {
            
            String question = JOptionPane.showInputDialog(null,"Do you want to convert another number?" +   // dialog box that asks the user to input Y or anything else if they want to convert more numbers.
                                             "\n" + "Enter Y for Yes." +
                                             "\n" + "Pressing Enter or inputting anything else will close the program.");
                                             
            if (question.equalsIgnoreCase("Y")) // if statement that calls the purpose method if the input is "Y".
            
               {
               
               purpose();
               
               }
               
            else  //else statement that exits the program if the input is anything else than "Y".
            
               {
               
               System.exit(0);
               
               }  
            
         }
         
    }
